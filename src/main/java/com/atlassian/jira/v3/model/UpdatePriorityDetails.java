/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import com.fasterxml.jackson.annotation.JsonValue;

import java.util.HashMap;

/**
 * Details of an issue priority.
 **/

public class UpdatePriorityDetails extends HashMap<String, Object> {

	/**
	 * The description of the priority.
	 **/

	private String description;
	/**
	 * The URL of an icon for the priority. Accepted protocols are HTTP and HTTPS. Built in icons can also be used.
	 **/

	private IconUrlEnum iconUrl;
	/**
	 * The name of the priority. Must be unique.
	 **/

	private String name;
	/**
	 * The status color of the priority in 3-digit or 6-digit hexadecimal format.
	 **/

	private String statusColor;

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * The description of the priority.
	 * @return description
	 **/
	public String getDescription() {
		return description;
	}

	/**
	 * Set description
	 **/
	public void setDescription(String description) {
		this.description = description;
	}

	public UpdatePriorityDetails description(String description) {
		this.description = description;
		return this;
	}

	/**
	 * The URL of an icon for the priority. Accepted protocols are HTTP and HTTPS. Built in icons can also be used.
	 * @return iconUrl
	 **/
	public IconUrlEnum getIconUrl() {
		return iconUrl;
	}

	/**
	 * Set iconUrl
	 **/
	public void setIconUrl(IconUrlEnum iconUrl) {
		this.iconUrl = iconUrl;
	}

	public UpdatePriorityDetails iconUrl(IconUrlEnum iconUrl) {
		this.iconUrl = iconUrl;
		return this;
	}

	/**
	 * The name of the priority. Must be unique.
	 * @return name
	 **/
	public String getName() {
		return name;
	}

	/**
	 * Set name
	 **/
	public void setName(String name) {
		this.name = name;
	}

	public UpdatePriorityDetails name(String name) {
		this.name = name;
		return this;
	}

	/**
	 * The status color of the priority in 3-digit or 6-digit hexadecimal format.
	 * @return statusColor
	 **/
	public String getStatusColor() {
		return statusColor;
	}

	/**
	 * Set statusColor
	 **/
	public void setStatusColor(String statusColor) {
		this.statusColor = statusColor;
	}

	public UpdatePriorityDetails statusColor(String statusColor) {
		this.statusColor = statusColor;
		return this;
	}


	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {
		String sb = "class UpdatePriorityDetails {\n" +
			"    " + toIndentedString(super.toString()) + "\n" +
			"    description: " + toIndentedString(description) + "\n" +
			"    iconUrl: " + toIndentedString(iconUrl) + "\n" +
			"    name: " + toIndentedString(name) + "\n" +
			"    statusColor: " + toIndentedString(statusColor) + "\n" +
			"}";
		return sb;
	}

	public enum IconUrlEnum {

		BLOCKER_PNG("/images/icons/priorities/blocker.png"), CRITICAL_PNG("/images/icons/priorities/critical.png"), HIGH_PNG("/images/icons/priorities/high.png"), HIGHEST_PNG("/images/icons/priorities/highest.png"), LOW_PNG("/images/icons/priorities/low.png"), LOWEST_PNG("/images/icons/priorities/lowest.png"), MAJOR_PNG("/images/icons/priorities/major.png"), MEDIUM_PNG("/images/icons/priorities/medium.png"), MINOR_PNG("/images/icons/priorities/minor.png"), TRIVIAL_PNG("/images/icons/priorities/trivial.png");


		String value;

		IconUrlEnum(String v) {
			value = v;
		}

		@JsonValue
		public String value() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}
	}
}
