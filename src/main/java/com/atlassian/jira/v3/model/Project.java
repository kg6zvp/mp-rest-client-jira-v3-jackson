/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 * <p>
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 * <p>
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import com.fasterxml.jackson.annotation.JsonValue;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.net.URI;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * Details about a project.
 **/
@Data
@Builder(toBuilder = true)
@NoArgsConstructor
@AllArgsConstructor
public class Project {
	/**
	 * Whether the project is archived.
	 */
	private Boolean archived;
	private ProjectArchivedBy archivedBy;

	/**
	 * The date when the project was archived.
	 */
	private Date archivedDate;
	/**
	 * The default assignee when creating issues for this project.
	 */
	private AssigneeTypeEnum assigneeType;
	private AvatarUrlsBean avatarUrls;
	/**
	 * List of the components contained in the project.
	 */
	private List<ProjectComponent> components = null;
	/**
	 * Whether the project is marked as deleted.
	 */
	private Boolean deleted;
	private ProjectDeletedBy deletedBy;
	/**
	 * The date when the project was marked as deleted.
	 */
	private Date deletedDate;
	/**
	 * A brief description of the project.
	 */
	private String description;
	/**
	 * An email address associated with the project.
	 */
	private String email;
	/**
	 * Expand options that include additional project details in the response.
	 */
	private String expand;
	/**
	 * Whether the project is selected as a favorite.
	 */
	private Boolean favourite;
	/**
	 * The ID of the project.
	 */
	private String id;
	private ProjectInsight insight;
	/**
	 * Whether the project is private from the user's perspective. This means the user can't see the project or any associated issues.
	 */
	private Boolean isPrivate;
	private ProjectIssueTypeHierarchy issueTypeHierarchy;
	/**
	 * List of the issue types available in the project.
	 */
	private List<IssueTypeDetails> issueTypes = null;
	/**
	 * The key of the project. This is what a user would typically perceive of as an "ID"
	 * For example, a project called "Time Slicer" might have a key of "TS"
	 * <p>
	 * This is prepended to issue numbers that belong to this project. Time Slicer story 50 would be "TS-50"
	 */
	private String key;
	private ProjectLandingPageInfo landingPageInfo;
	private ProjectLead lead;
	/**
	 * The name of the project.
	 */
	private String name;
	private ProjectPermissions permissions;
	private ProjectProjectCategory projectCategory;
	/**
	 * The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.
	 */
	private ProjectTypeKeyEnum projectTypeKey;
	/**
	 * Map of project properties
	 */
	private Map<String, Object> properties = null;
	/**
	 * The date when the project is deleted permanently.
	 */
	private Date retentionTillDate;
	/**
	 * The name and self URL for each role defined in the project. For more information, see [Create project role](#api-rest-api-3-role-post).
	 */
	private Map<String, URI> roles = null;
	/**
	 * The URL of the project details.
	 */
	private URI self;
	/**
	 * Whether the project is simplified.
	 */
	private Boolean simplified;
	/**
	 * The type of the project.
	 */
	private StyleEnum style;
	/**
	 * A link to information about this project, such as project documentation.
	 */
	private String url;
	/**
	 * Unique ID for next-gen projects.
	 */
	private UUID uuid;
	/**
	 * The versions defined in the project. For more information, see [Create version](#api-rest-api-3-version-post).
	 */
	private List<Version> versions = null;

	public enum AssigneeTypeEnum {

		PROJECT_LEAD("PROJECT_LEAD"), UNASSIGNED("UNASSIGNED");


		String value;

		AssigneeTypeEnum(String v) {
			value = v;
		}

		@JsonValue
		public String value() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}
	}

	public enum ProjectTypeKeyEnum {
		SOFTWARE("software"), SERVICE_DESK("service_desk"), BUSINESS("business");


		String value;

		ProjectTypeKeyEnum(String v) {
			value = v;
		}

		@JsonValue
		public String value() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}
	}

	public enum StyleEnum {

		CLASSIC("classic"), NEXT_GEN("next-gen");


		String value;

		StyleEnum(String v) {
			value = v;
		}

		@JsonValue
		public String value() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}
	}
}
