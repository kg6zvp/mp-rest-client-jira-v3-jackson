/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import java.util.ArrayList;
import java.util.List;

/**
 * Details about the analysed Jira expression.
 **/

public class JiraExpressionAnalysis {


	private JiraExpressionComplexity complexity;

	/**
	 * A list of validation errors. Not included if the expression is valid.
	 **/

	private List<JiraExpressionValidationError> errors = null;

	/**
	 * The analysed expression.
	 **/

	private String expression;

	/**
	 * EXPERIMENTAL. The inferred type of the expression.
	 **/

	private String type;

	/**
	 * Whether the expression is valid and the interpreter will evaluate it. Note that the expression may fail at runtime (for example, if it executes too many expensive operations).
	 **/

	private Boolean valid;

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * Get complexity
	 * @return complexity
	 **/
	public JiraExpressionComplexity getComplexity() {
		return complexity;
	}

	/**
	 * Set complexity
	 **/
	public void setComplexity(JiraExpressionComplexity complexity) {
		this.complexity = complexity;
	}

	public JiraExpressionAnalysis complexity(JiraExpressionComplexity complexity) {
		this.complexity = complexity;
		return this;
	}

	/**
	 * A list of validation errors. Not included if the expression is valid.
	 * @return errors
	 **/
	public List<JiraExpressionValidationError> getErrors() {
		return errors;
	}

	/**
	 * Set errors
	 **/
	public void setErrors(List<JiraExpressionValidationError> errors) {
		this.errors = errors;
	}

	public JiraExpressionAnalysis errors(List<JiraExpressionValidationError> errors) {
		this.errors = errors;
		return this;
	}

	public JiraExpressionAnalysis addErrorsItem(JiraExpressionValidationError errorsItem) {
		if (this.errors == null) {
			this.errors = new ArrayList<>();
		}
		this.errors.add(errorsItem);
		return this;
	}

	/**
	 * The analysed expression.
	 * @return expression
	 **/
	public String getExpression() {
		return expression;
	}

	/**
	 * Set expression
	 **/
	public void setExpression(String expression) {
		this.expression = expression;
	}

	public JiraExpressionAnalysis expression(String expression) {
		this.expression = expression;
		return this;
	}

	/**
	 * EXPERIMENTAL. The inferred type of the expression.
	 * @return type
	 **/
	public String getType() {
		return type;
	}

	/**
	 * Set type
	 **/
	public void setType(String type) {
		this.type = type;
	}

	public JiraExpressionAnalysis type(String type) {
		this.type = type;
		return this;
	}

	/**
	 * Whether the expression is valid and the interpreter will evaluate it. Note that the expression may fail at runtime (for example, if it executes too many expensive operations).
	 * @return valid
	 **/
	public Boolean getValid() {
		return valid;
	}

	/**
	 * Set valid
	 **/
	public void setValid(Boolean valid) {
		this.valid = valid;
	}

	public JiraExpressionAnalysis valid(Boolean valid) {
		this.valid = valid;
		return this;
	}

	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {

		String sb = "class JiraExpressionAnalysis {\n" +
			"    complexity: " + toIndentedString(complexity) + "\n" +
			"    errors: " + toIndentedString(errors) + "\n" +
			"    expression: " + toIndentedString(expression) + "\n" +
			"    type: " + toIndentedString(type) + "\n" +
			"    valid: " + toIndentedString(valid) + "\n" +
			"}";
		return sb;
	}
}
