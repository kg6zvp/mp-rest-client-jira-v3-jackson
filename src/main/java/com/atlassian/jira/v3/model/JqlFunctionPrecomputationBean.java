/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 * <p>
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 * <p>
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;

import java.util.Date;
import java.util.List;

/**
 * Jql function precomputation.
 **/
@NoArgsConstructor
@AllArgsConstructor
public class JqlFunctionPrecomputationBean {

	/**
	 * The list of arguments function was invoked with.
	 **/
	private List<String> arguments = null;

	/**
	 * The timestamp of the precomputation creation.
	 **/
	private Date created;

	/**
	 * The error message to be displayed to the user.
	 **/
	private String error;

	/**
	 * The field the function was executed against.
	 **/
	private String field;

	/**
	 * The function key.
	 **/
	private String functionKey;

	/**
	 * The name of the function.
	 **/
	private String functionName;

	/**
	 * The id of the precomputation.
	 **/
	private String id;

	/**
	 * The operator in context of which function was executed.
	 **/
	private String operator;

	/**
	 * The timestamp of the precomputation last update.
	 **/
	private Date updated;

	/**
	 * The timestamp of the precomputation last usage.
	 **/
	private Date used;

	/**
	 * The JQL fragment stored as the precomputation.
	 **/
	private String value;

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * The list of arguments function was invoked with.
	 * @return arguments
	 **/
	public List<String> getArguments() {
		return arguments;
	}

	/**
	 * The timestamp of the precomputation creation.
	 * @return created
	 **/
	public Date getCreated() {
		return created;
	}

	/**
	 * The error message to be displayed to the user.
	 * @return error
	 **/
	public String getError() {
		return error;
	}

	/**
	 * The field the function was executed against.
	 * @return field
	 **/
	public String getField() {
		return field;
	}

	/**
	 * The function key.
	 * @return functionKey
	 **/
	public String getFunctionKey() {
		return functionKey;
	}

	/**
	 * The name of the function.
	 * @return functionName
	 **/
	public String getFunctionName() {
		return functionName;
	}

	/**
	 * The id of the precomputation.
	 * @return id
	 **/
	public String getId() {
		return id;
	}

	/**
	 * The operator in context of which function was executed.
	 * @return operator
	 **/
	public String getOperator() {
		return operator;
	}

	/**
	 * The timestamp of the precomputation last update.
	 * @return updated
	 **/
	public Date getUpdated() {
		return updated;
	}

	/**
	 * The timestamp of the precomputation last usage.
	 * @return used
	 **/
	public Date getUsed() {
		return used;
	}

	/**
	 * The JQL fragment stored as the precomputation.
	 * @return value
	 **/
	public String getValue() {
		return value;
	}

	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {

		String sb = "class JqlFunctionPrecomputationBean {\n" +
			"    arguments: " + toIndentedString(arguments) + "\n" +
			"    created: " + toIndentedString(created) + "\n" +
			"    error: " + toIndentedString(error) + "\n" +
			"    field: " + toIndentedString(field) + "\n" +
			"    functionKey: " + toIndentedString(functionKey) + "\n" +
			"    functionName: " + toIndentedString(functionName) + "\n" +
			"    id: " + toIndentedString(id) + "\n" +
			"    operator: " + toIndentedString(operator) + "\n" +
			"    updated: " + toIndentedString(updated) + "\n" +
			"    used: " + toIndentedString(used) + "\n" +
			"    value: " + toIndentedString(value) + "\n" +
			"}";
		return sb;
	}
}
