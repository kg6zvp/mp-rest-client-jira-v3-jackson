/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 * <p>
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 * <p>
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import com.fasterxml.jackson.annotation.JsonValue;

/**
 * The details of a UI modification's context, which define where to activate the UI modification.
 **/

public class UiModificationContextDetails {

	/**
	 * The ID of the UI modification context.
	 **/

	private String id;

	/**
	 * Whether a context is available. For example, when a project is deleted the context becomes unavailable.
	 **/

	private Boolean isAvailable;

	/**
	 * The issue type ID of the context. Null is treated as a wildcard, meaning the UI modification will be applied to all issue types. Each UI modification context can have a maximum of one wildcard.
	 **/

	private String issueTypeId;

	/**
	 * The project ID of the context. Null is treated as a wildcard, meaning the UI modification will be applied to all projects. Each UI modification context can have a maximum of one wildcard.
	 **/

	private String projectId;
	/**
	 * The view type of the context. Only `GIC`(Global Issue Create) and `IssueView` are supported. Null is treated as a wildcard, meaning the UI modification will be applied to all view types. Each UI modification context can have a maximum of one wildcard.
	 **/

	private ViewTypeEnum viewType;

	public UiModificationContextDetails() {
	}

	public UiModificationContextDetails(
		String id,
		Boolean isAvailable
	) {
		this.id = id;
		this.isAvailable = isAvailable;
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * The ID of the UI modification context.
	 * @return id
	 **/
	public String getId() {
		return id;
	}


	/**
	 * Whether a context is available. For example, when a project is deleted the context becomes unavailable.
	 * @return isAvailable
	 **/
	public Boolean getIsAvailable() {
		return isAvailable;
	}


	/**
	 * The issue type ID of the context. Null is treated as a wildcard, meaning the UI modification will be applied to all issue types. Each UI modification context can have a maximum of one wildcard.
	 * @return issueTypeId
	 **/
	public String getIssueTypeId() {
		return issueTypeId;
	}

	/**
	 * Set issueTypeId
	 **/
	public void setIssueTypeId(String issueTypeId) {
		this.issueTypeId = issueTypeId;
	}

	public UiModificationContextDetails issueTypeId(String issueTypeId) {
		this.issueTypeId = issueTypeId;
		return this;
	}

	/**
	 * The project ID of the context. Null is treated as a wildcard, meaning the UI modification will be applied to all projects. Each UI modification context can have a maximum of one wildcard.
	 * @return projectId
	 **/
	public String getProjectId() {
		return projectId;
	}

	/**
	 * Set projectId
	 **/
	public void setProjectId(String projectId) {
		this.projectId = projectId;
	}

	public UiModificationContextDetails projectId(String projectId) {
		this.projectId = projectId;
		return this;
	}

	/**
	 * The view type of the context. Only &#x60;GIC&#x60;(Global Issue Create) and &#x60;IssueView&#x60; are supported. Null is treated as a wildcard, meaning the UI modification will be applied to all view types. Each UI modification context can have a maximum of one wildcard.
	 * @return viewType
	 **/
	public ViewTypeEnum getViewType() {
		return viewType;
	}

	/**
	 * Set viewType
	 **/
	public void setViewType(ViewTypeEnum viewType) {
		this.viewType = viewType;
	}

	public UiModificationContextDetails viewType(ViewTypeEnum viewType) {
		this.viewType = viewType;
		return this;
	}


	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {

		String sb = "class UiModificationContextDetails {\n" +
			"    id: " + toIndentedString(id) + "\n" +
			"    isAvailable: " + toIndentedString(isAvailable) + "\n" +
			"    issueTypeId: " + toIndentedString(issueTypeId) + "\n" +
			"    projectId: " + toIndentedString(projectId) + "\n" +
			"    viewType: " + toIndentedString(viewType) + "\n" +
			"}";
		return sb;
	}

	public enum ViewTypeEnum {

		GIC("GIC"), ISSUEVIEW("IssueView");


		String value;

		ViewTypeEnum(String v) {
			value = v;
		}

		@JsonValue
		public String value() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}
	}
}
