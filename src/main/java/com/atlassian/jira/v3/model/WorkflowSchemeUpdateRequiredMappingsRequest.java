/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 * <p>
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 * <p>
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import java.util.ArrayList;
import java.util.List;

/**
 * The request payload to get the required mappings for updating a workflow scheme.
 **/

public class WorkflowSchemeUpdateRequiredMappingsRequest {

	/**
	 * The ID of the new default workflow for this workflow scheme. Only used in global-scoped workflow schemes. If it isn't specified, is set to *Jira Workflow (jira)*.
	 **/

	private String defaultWorkflowId;

	/**
	 * The ID of the workflow scheme.
	 **/

	private String id;

	/**
	 * The new workflow to issue type mappings for this workflow scheme.
	 **/

	private List<WorkflowSchemeAssociation> workflowsForIssueTypes = new ArrayList<>();

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * The ID of the new default workflow for this workflow scheme. Only used in global-scoped workflow schemes. If it isn&#39;t specified, is set to *Jira Workflow (jira)*.
	 * @return defaultWorkflowId
	 **/
	public String getDefaultWorkflowId() {
		return defaultWorkflowId;
	}

	/**
	 * Set defaultWorkflowId
	 **/
	public void setDefaultWorkflowId(String defaultWorkflowId) {
		this.defaultWorkflowId = defaultWorkflowId;
	}

	public WorkflowSchemeUpdateRequiredMappingsRequest defaultWorkflowId(String defaultWorkflowId) {
		this.defaultWorkflowId = defaultWorkflowId;
		return this;
	}

	/**
	 * The ID of the workflow scheme.
	 * @return id
	 **/
	public String getId() {
		return id;
	}

	/**
	 * Set id
	 **/
	public void setId(String id) {
		this.id = id;
	}

	public WorkflowSchemeUpdateRequiredMappingsRequest id(String id) {
		this.id = id;
		return this;
	}

	/**
	 * The new workflow to issue type mappings for this workflow scheme.
	 * @return workflowsForIssueTypes
	 **/
	public List<WorkflowSchemeAssociation> getWorkflowsForIssueTypes() {
		return workflowsForIssueTypes;
	}

	/**
	 * Set workflowsForIssueTypes
	 **/
	public void setWorkflowsForIssueTypes(List<WorkflowSchemeAssociation> workflowsForIssueTypes) {
		this.workflowsForIssueTypes = workflowsForIssueTypes;
	}

	public WorkflowSchemeUpdateRequiredMappingsRequest workflowsForIssueTypes(List<WorkflowSchemeAssociation> workflowsForIssueTypes) {
		this.workflowsForIssueTypes = workflowsForIssueTypes;
		return this;
	}

	public WorkflowSchemeUpdateRequiredMappingsRequest addWorkflowsForIssueTypesItem(WorkflowSchemeAssociation workflowsForIssueTypesItem) {
		if (this.workflowsForIssueTypes == null) {
			this.workflowsForIssueTypes = new ArrayList<>();
		}
		this.workflowsForIssueTypes.add(workflowsForIssueTypesItem);
		return this;
	}

	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {

		String sb = "class WorkflowSchemeUpdateRequiredMappingsRequest {\n" +
			"    defaultWorkflowId: " + toIndentedString(defaultWorkflowId) + "\n" +
			"    id: " + toIndentedString(id) + "\n" +
			"    workflowsForIssueTypes: " + toIndentedString(workflowsForIssueTypes) + "\n" +
			"}";
		return sb;
	}
}
