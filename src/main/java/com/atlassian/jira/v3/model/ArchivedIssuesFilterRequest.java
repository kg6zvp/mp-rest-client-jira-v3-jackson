/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 * <p>
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 * <p>
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

/**
 * Details of a filter for exporting archived issues.
 **/

public class ArchivedIssuesFilterRequest extends HashMap<String, Object> {

	/**
	 * List archived issues archived by a specified account ID.
	 **/

	private List<String> archivedBy = null;


	private DateRangeFilterRequest archivedDateRange;

	/**
	 * List archived issues with a specified issue type ID.
	 **/

	private List<String> issueTypes = null;

	/**
	 * List archived issues with a specified project key.
	 **/

	private List<String> projects = null;

	/**
	 * List archived issues where the reporter is a specified account ID.
	 **/

	private List<String> reporters = null;

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * List archived issues archived by a specified account ID.
	 * @return archivedBy
	 **/
	public List<String> getArchivedBy() {
		return archivedBy;
	}

	/**
	 * Set archivedBy
	 **/
	public void setArchivedBy(List<String> archivedBy) {
		this.archivedBy = archivedBy;
	}

	public ArchivedIssuesFilterRequest archivedBy(List<String> archivedBy) {
		this.archivedBy = archivedBy;
		return this;
	}

	public ArchivedIssuesFilterRequest addArchivedByItem(String archivedByItem) {
		if (this.archivedBy == null) {
			this.archivedBy = new ArrayList<>();
		}
		this.archivedBy.add(archivedByItem);
		return this;
	}

	/**
	 * Get archivedDateRange
	 * @return archivedDateRange
	 **/
	public DateRangeFilterRequest getArchivedDateRange() {
		return archivedDateRange;
	}

	/**
	 * Set archivedDateRange
	 **/
	public void setArchivedDateRange(DateRangeFilterRequest archivedDateRange) {
		this.archivedDateRange = archivedDateRange;
	}

	public ArchivedIssuesFilterRequest archivedDateRange(DateRangeFilterRequest archivedDateRange) {
		this.archivedDateRange = archivedDateRange;
		return this;
	}

	/**
	 * List archived issues with a specified issue type ID.
	 * @return issueTypes
	 **/
	public List<String> getIssueTypes() {
		return issueTypes;
	}

	/**
	 * Set issueTypes
	 **/
	public void setIssueTypes(List<String> issueTypes) {
		this.issueTypes = issueTypes;
	}

	public ArchivedIssuesFilterRequest issueTypes(List<String> issueTypes) {
		this.issueTypes = issueTypes;
		return this;
	}

	public ArchivedIssuesFilterRequest addIssueTypesItem(String issueTypesItem) {
		if (this.issueTypes == null) {
			this.issueTypes = new ArrayList<>();
		}
		this.issueTypes.add(issueTypesItem);
		return this;
	}

	/**
	 * List archived issues with a specified project key.
	 * @return projects
	 **/
	public List<String> getProjects() {
		return projects;
	}

	/**
	 * Set projects
	 **/
	public void setProjects(List<String> projects) {
		this.projects = projects;
	}

	public ArchivedIssuesFilterRequest projects(List<String> projects) {
		this.projects = projects;
		return this;
	}

	public ArchivedIssuesFilterRequest addProjectsItem(String projectsItem) {
		if (this.projects == null) {
			this.projects = new ArrayList<>();
		}
		this.projects.add(projectsItem);
		return this;
	}

	/**
	 * List archived issues where the reporter is a specified account ID.
	 * @return reporters
	 **/
	public List<String> getReporters() {
		return reporters;
	}

	/**
	 * Set reporters
	 **/
	public void setReporters(List<String> reporters) {
		this.reporters = reporters;
	}

	public ArchivedIssuesFilterRequest reporters(List<String> reporters) {
		this.reporters = reporters;
		return this;
	}

	public ArchivedIssuesFilterRequest addReportersItem(String reportersItem) {
		if (this.reporters == null) {
			this.reporters = new ArrayList<>();
		}
		this.reporters.add(reportersItem);
		return this;
	}

	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {
		String sb = "class ArchivedIssuesFilterRequest {\n" +
			"    " + toIndentedString(super.toString()) + "\n" +
			"    archivedBy: " + toIndentedString(archivedBy) + "\n" +
			"    archivedDateRange: " + toIndentedString(archivedDateRange) + "\n" +
			"    issueTypes: " + toIndentedString(issueTypes) + "\n" +
			"    projects: " + toIndentedString(projects) + "\n" +
			"    reporters: " + toIndentedString(reporters) + "\n" +
			"}";
		return sb;
	}
}
