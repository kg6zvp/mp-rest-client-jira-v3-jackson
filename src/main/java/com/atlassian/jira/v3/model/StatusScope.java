/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import com.fasterxml.jackson.annotation.JsonValue;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * The scope of the status.
 **/
@Data
@NoArgsConstructor
@AllArgsConstructor
public class StatusScope {

	/**
	 * -- GETTER --
	 *  Get project
	 *
	 *
	 * -- SETTER --
	 *  Set project
	 @return project
	 */
	private ProjectId project;
	/**
	 * The scope of the status. `GLOBAL` for company-managed projects and `PROJECT` for team-managed projects.
	 *
	 * -- GETTER --
	 *  The scope of the status. &#x60;GLOBAL&#x60; for company-managed projects and &#x60;PROJECT&#x60; for team-managed projects.
	 *
	 *
	 * -- SETTER --
	 *  Set type
	 @return type
	 */
	private TypeEnum type;

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public StatusScope project(ProjectId project) {
		this.project = project;
		return this;
	}

	public StatusScope type(TypeEnum type) {
		this.type = type;
		return this;
	}


	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {

		String sb = "class StatusScope {\n" +
			"    project: " + toIndentedString(project) + "\n" +
			"    type: " + toIndentedString(type) + "\n" +
			"}";
		return sb;
	}

	public enum TypeEnum {

		PROJECT("PROJECT"), GLOBAL("GLOBAL");


		String value;

		TypeEnum(String v) {
			value = v;
		}

		@JsonValue
		public String value() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}
	}
}
