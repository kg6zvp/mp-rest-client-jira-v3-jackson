/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 * <p>
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 * <p>
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.atlassian.jira.v3.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.*;

import java.net.URI;
import java.util.Date;
import java.util.List;
import java.util.Map;

/**
 * Details about an issue.
 **/
@Data
@Builder(toBuilder = true)
@NoArgsConstructor
@AllArgsConstructor
public class IssueBean {
	/**
	 * Jira issue id, never shown to user in web UI as far as I know
	 */
	private String id;
	/**
	 * The key of the issue. To the user, this is the ID
	 * This is what users tend to think of as the "Story number" or "Story ID"
	 * For example, a StackOverflow project might have `SO-243` in this field.
	 */
	private String key;
	/**
	 * The API URL of the issue details.
	 */
	private URI self;
	private IssueBeanChangelog changelog;
	private IssueBeanEditmeta editmeta;

	/**
	 * Expand options that include additional issue details in the response.
	 * <p>
	 * This is a comma-separated list of strings
	 */
	private String expand;
	private Map<String, Object> fields;
	private IssueFields newFields;
	private IncludedFields fieldsToInclude;

	/**
	 * The ID and name of each field present on the issue.
	 */
	private Map<String, String> names;
	private IssueBeanOperations operations;
	/**
	 * Details of the issue properties identified in the request.
	 */
	private Map<String, Object> properties;

	/**
	 * The rendered value of each field present on the issue.
	 */
	private Map<String, Object> renderedFields;

	/**
	 * The schema describing each field present on the issue.
	 */
	private Map<String, JsonTypeBean> schema;

	/**
	 * The transitions that can be performed on the issue.
	 */
	private List<IssueTransition> transitions;

	/**
	 * The versions of each field on the issue.
	 */
	private Map<String, Map<String, Object>> versionedRepresentations;

	@Data
	@Builder(toBuilder = true)
	@NoArgsConstructor
	@AllArgsConstructor
	public static class IssueFields {
		@JsonProperty("statuscategorychangedate")
		private Date statusCategoryChangeDate;
		private FieldsIssueType issueType;
		private LinkedIssue parent;
		@JsonProperty("workratio")
		private Integer workRatio;
		private Date lastViewed;
		private Date created;
		private Date updated;
		/**
		 * What the user sees as the story title
		 */
		private String summary;
		private FieldsPriority priority;
		// watches
		// issuerestriction
		@JsonProperty("issuelinks")
		private List<LinkedIssue> issueLinks; // not same as linkedissue
		private User creator;
		private User reporter;
		// comment
		// votes
		// duedate
		// subtasks[]
		// attachment[]
		private User assignee;
		private AtlassianDocumentFormat description; // Atlassian Document Format (ADF)
		@JsonAnySetter
		@Getter(onMethod_ = @JsonAnyGetter)
		Map<String, JsonNode> additionalProperties;
	}
}
