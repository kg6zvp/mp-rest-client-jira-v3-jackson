/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.List;

/**
 * Details of a project feature.
 **/

public class ProjectFeature {

	/**
	 * The key of the feature.
	 **/

	private String feature;

	/**
	 * URI for the image representing the feature.
	 **/

	private String imageUri;

	/**
	 * Localized display description for the feature.
	 **/

	private String localisedDescription;

	/**
	 * Localized display name for the feature.
	 **/

	private String localisedName;

	/**
	 * List of keys of the features required to enable the feature.
	 **/

	private List<String> prerequisites = null;

	/**
	 * The ID of the project.
	 **/

	private Long projectId;
	/**
	 * The state of the feature. When updating the state of a feature, only ENABLED and DISABLED are supported. Responses can contain all values
	 **/

	private StateEnum state;
	/**
	 * Whether the state of the feature can be updated.
	 **/

	private Boolean toggleLocked;

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * The key of the feature.
	 * @return feature
	 **/
	public String getFeature() {
		return feature;
	}

	/**
	 * Set feature
	 **/
	public void setFeature(String feature) {
		this.feature = feature;
	}

	public ProjectFeature feature(String feature) {
		this.feature = feature;
		return this;
	}

	/**
	 * URI for the image representing the feature.
	 * @return imageUri
	 **/
	public String getImageUri() {
		return imageUri;
	}

	/**
	 * Set imageUri
	 **/
	public void setImageUri(String imageUri) {
		this.imageUri = imageUri;
	}

	public ProjectFeature imageUri(String imageUri) {
		this.imageUri = imageUri;
		return this;
	}

	/**
	 * Localized display description for the feature.
	 * @return localisedDescription
	 **/
	public String getLocalisedDescription() {
		return localisedDescription;
	}

	/**
	 * Set localisedDescription
	 **/
	public void setLocalisedDescription(String localisedDescription) {
		this.localisedDescription = localisedDescription;
	}

	public ProjectFeature localisedDescription(String localisedDescription) {
		this.localisedDescription = localisedDescription;
		return this;
	}

	/**
	 * Localized display name for the feature.
	 * @return localisedName
	 **/
	public String getLocalisedName() {
		return localisedName;
	}

	/**
	 * Set localisedName
	 **/
	public void setLocalisedName(String localisedName) {
		this.localisedName = localisedName;
	}

	public ProjectFeature localisedName(String localisedName) {
		this.localisedName = localisedName;
		return this;
	}

	/**
	 * List of keys of the features required to enable the feature.
	 * @return prerequisites
	 **/
	public List<String> getPrerequisites() {
		return prerequisites;
	}

	/**
	 * Set prerequisites
	 **/
	public void setPrerequisites(List<String> prerequisites) {
		this.prerequisites = prerequisites;
	}

	public ProjectFeature prerequisites(List<String> prerequisites) {
		this.prerequisites = prerequisites;
		return this;
	}

	public ProjectFeature addPrerequisitesItem(String prerequisitesItem) {
		if (this.prerequisites == null) {
			this.prerequisites = new ArrayList<>();
		}
		this.prerequisites.add(prerequisitesItem);
		return this;
	}

	/**
	 * The ID of the project.
	 * @return projectId
	 **/
	public Long getProjectId() {
		return projectId;
	}

	/**
	 * Set projectId
	 **/
	public void setProjectId(Long projectId) {
		this.projectId = projectId;
	}

	public ProjectFeature projectId(Long projectId) {
		this.projectId = projectId;
		return this;
	}

	/**
	 * The state of the feature. When updating the state of a feature, only ENABLED and DISABLED are supported. Responses can contain all values
	 * @return state
	 **/
	public StateEnum getState() {
		return state;
	}

	/**
	 * Set state
	 **/
	public void setState(StateEnum state) {
		this.state = state;
	}

	public ProjectFeature state(StateEnum state) {
		this.state = state;
		return this;
	}

	/**
	 * Whether the state of the feature can be updated.
	 * @return toggleLocked
	 **/
	public Boolean getToggleLocked() {
		return toggleLocked;
	}

	/**
	 * Set toggleLocked
	 **/
	public void setToggleLocked(Boolean toggleLocked) {
		this.toggleLocked = toggleLocked;
	}

	public ProjectFeature toggleLocked(Boolean toggleLocked) {
		this.toggleLocked = toggleLocked;
		return this;
	}


	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {

		String sb = "class ProjectFeature {\n" +
			"    feature: " + toIndentedString(feature) + "\n" +
			"    imageUri: " + toIndentedString(imageUri) + "\n" +
			"    localisedDescription: " + toIndentedString(localisedDescription) + "\n" +
			"    localisedName: " + toIndentedString(localisedName) + "\n" +
			"    prerequisites: " + toIndentedString(prerequisites) + "\n" +
			"    projectId: " + toIndentedString(projectId) + "\n" +
			"    state: " + toIndentedString(state) + "\n" +
			"    toggleLocked: " + toIndentedString(toggleLocked) + "\n" +
			"}";
		return sb;
	}

	public enum StateEnum {

		ENABLED("ENABLED"), DISABLED("DISABLED"), COMING_SOON("COMING_SOON");


		String value;

		StateEnum(String v) {
			value = v;
		}

		@JsonValue
		public String value() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}
	}
}
