/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;

import java.net.URI;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

/**
 * Details of a worklog.
 **/
@NoArgsConstructor
@AllArgsConstructor
public class Worklog extends HashMap<String, Object> {


	private WorklogAuthor author;

	/**
	 * A comment about the worklog in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/). Optional when creating or updating a worklog.
	 **/

	private Object comment = null;

	/**
	 * The datetime on which the worklog was created.
	 **/

	private Date created;

	/**
	 * The ID of the worklog record.
	 **/

	private String id;

	/**
	 * The ID of the issue this worklog is for.
	 **/

	private String issueId;

	/**
	 * Details of properties for the worklog. Optional when creating or updating a worklog.
	 **/

	private List<EntityProperty> properties = null;

	/**
	 * The URL of the worklog item.
	 **/

	private URI self;

	/**
	 * The datetime on which the worklog effort was started. Required when creating a worklog. Optional when updating a worklog.
	 **/

	private Date started;

	/**
	 * The time spent working on the issue as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). Required when creating a worklog if `timeSpentSeconds` isn't provided. Optional when updating a worklog. Cannot be provided if `timeSpentSecond` is provided.
	 **/

	private String timeSpent;

	/**
	 * The time in seconds spent working on the issue. Required when creating a worklog if `timeSpent` isn't provided. Optional when updating a worklog. Cannot be provided if `timeSpent` is provided.
	 **/

	private Long timeSpentSeconds;


	private WorklogUpdateAuthor updateAuthor;

	/**
	 * The datetime on which the worklog was last updated.
	 **/

	private Date updated;


	private Visibility visibility;

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * Get author
	 * @return author
	 **/
	public WorklogAuthor getAuthor() {
		return author;
	}

	/**
	 * Set author
	 **/
	public void setAuthor(WorklogAuthor author) {
		this.author = author;
	}

	public Worklog author(WorklogAuthor author) {
		this.author = author;
		return this;
	}

	/**
	 * A comment about the worklog in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/). Optional when creating or updating a worklog.
	 * @return comment
	 **/
	public Object getComment() {
		return comment;
	}

	/**
	 * Set comment
	 **/
	public void setComment(Object comment) {
		this.comment = comment;
	}

	public Worklog comment(Object comment) {
		this.comment = comment;
		return this;
	}

	/**
	 * The datetime on which the worklog was created.
	 * @return created
	 **/
	public Date getCreated() {
		return created;
	}

	/**
	 * The ID of the worklog record.
	 * @return id
	 **/
	public String getId() {
		return id;
	}

	/**
	 * The ID of the issue this worklog is for.
	 * @return issueId
	 **/
	public String getIssueId() {
		return issueId;
	}

	/**
	 * Details of properties for the worklog. Optional when creating or updating a worklog.
	 * @return properties
	 **/
	public List<EntityProperty> getProperties() {
		return properties;
	}

	/**
	 * Set properties
	 **/
	public void setProperties(List<EntityProperty> properties) {
		this.properties = properties;
	}

	public Worklog properties(List<EntityProperty> properties) {
		this.properties = properties;
		return this;
	}

	public Worklog addPropertiesItem(EntityProperty propertiesItem) {
		if (this.properties == null) {
			this.properties = new ArrayList<>();
		}
		this.properties.add(propertiesItem);
		return this;
	}

	/**
	 * The URL of the worklog item.
	 * @return self
	 **/
	public URI getSelf() {
		return self;
	}

	/**
	 * The datetime on which the worklog effort was started. Required when creating a worklog. Optional when updating a worklog.
	 * @return started
	 **/
	public Date getStarted() {
		return started;
	}

	/**
	 * Set started
	 **/
	public void setStarted(Date started) {
		this.started = started;
	}

	public Worklog started(Date started) {
		this.started = started;
		return this;
	}

	/**
	 * The time spent working on the issue as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). Required when creating a worklog if &#x60;timeSpentSeconds&#x60; isn&#39;t provided. Optional when updating a worklog. Cannot be provided if &#x60;timeSpentSecond&#x60; is provided.
	 * @return timeSpent
	 **/
	public String getTimeSpent() {
		return timeSpent;
	}

	/**
	 * Set timeSpent
	 **/
	public void setTimeSpent(String timeSpent) {
		this.timeSpent = timeSpent;
	}

	public Worklog timeSpent(String timeSpent) {
		this.timeSpent = timeSpent;
		return this;
	}

	/**
	 * The time in seconds spent working on the issue. Required when creating a worklog if &#x60;timeSpent&#x60; isn&#39;t provided. Optional when updating a worklog. Cannot be provided if &#x60;timeSpent&#x60; is provided.
	 * @return timeSpentSeconds
	 **/
	public Long getTimeSpentSeconds() {
		return timeSpentSeconds;
	}

	/**
	 * Set timeSpentSeconds
	 **/
	public void setTimeSpentSeconds(Long timeSpentSeconds) {
		this.timeSpentSeconds = timeSpentSeconds;
	}

	public Worklog timeSpentSeconds(Long timeSpentSeconds) {
		this.timeSpentSeconds = timeSpentSeconds;
		return this;
	}

	/**
	 * Get updateAuthor
	 * @return updateAuthor
	 **/
	public WorklogUpdateAuthor getUpdateAuthor() {
		return updateAuthor;
	}

	/**
	 * Set updateAuthor
	 **/
	public void setUpdateAuthor(WorklogUpdateAuthor updateAuthor) {
		this.updateAuthor = updateAuthor;
	}

	public Worklog updateAuthor(WorklogUpdateAuthor updateAuthor) {
		this.updateAuthor = updateAuthor;
		return this;
	}

	/**
	 * The datetime on which the worklog was last updated.
	 * @return updated
	 **/
	public Date getUpdated() {
		return updated;
	}

	/**
	 * Get visibility
	 * @return visibility
	 **/
	public Visibility getVisibility() {
		return visibility;
	}

	/**
	 * Set visibility
	 **/
	public void setVisibility(Visibility visibility) {
		this.visibility = visibility;
	}

	public Worklog visibility(Visibility visibility) {
		this.visibility = visibility;
		return this;
	}

	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {
		String sb = "class Worklog {\n" +
			"    " + toIndentedString(super.toString()) + "\n" +
			"    author: " + toIndentedString(author) + "\n" +
			"    comment: " + toIndentedString(comment) + "\n" +
			"    created: " + toIndentedString(created) + "\n" +
			"    id: " + toIndentedString(id) + "\n" +
			"    issueId: " + toIndentedString(issueId) + "\n" +
			"    properties: " + toIndentedString(properties) + "\n" +
			"    self: " + toIndentedString(self) + "\n" +
			"    started: " + toIndentedString(started) + "\n" +
			"    timeSpent: " + toIndentedString(timeSpent) + "\n" +
			"    timeSpentSeconds: " + toIndentedString(timeSpentSeconds) + "\n" +
			"    updateAuthor: " + toIndentedString(updateAuthor) + "\n" +
			"    updated: " + toIndentedString(updated) + "\n" +
			"    visibility: " + toIndentedString(visibility) + "\n" +
			"}";
		return sb;
	}
}
