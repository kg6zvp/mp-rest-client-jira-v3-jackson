/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import java.util.ArrayList;
import java.util.List;

/**
 * The details of a workflow transition rules.
 **/

public class CreateWorkflowTransitionRulesDetails {


	private CreateWorkflowCondition conditions;

	/**
	 * The workflow post functions.  **Note:** The default post functions are always added to the *initial* transition, as in:      \"postFunctions\": [         {             \"type\": \"IssueCreateFunction\"         },         {             \"type\": \"IssueReindexFunction\"         },         {             \"type\": \"FireIssueEventFunction\",             \"configuration\": {                 \"event\": {                     \"id\": \"1\",                     \"name\": \"issue_created\"                 }             }         }     ]  **Note:** The default post functions are always added to the *global* and *directed* transitions, as in:      \"postFunctions\": [         {             \"type\": \"UpdateIssueStatusFunction\"         },         {             \"type\": \"CreateCommentFunction\"         },         {             \"type\": \"GenerateChangeHistoryFunction\"         },         {             \"type\": \"IssueReindexFunction\"         },         {             \"type\": \"FireIssueEventFunction\",             \"configuration\": {                 \"event\": {                     \"id\": \"13\",                     \"name\": \"issue_generic\"                 }             }         }     ]
	 **/

	private List<CreateWorkflowTransitionRule> postFunctions = null;

	/**
	 * The workflow validators.  **Note:** The default permission validator is always added to the *initial* transition, as in:      \"validators\": [         {             \"type\": \"PermissionValidator\",             \"configuration\": {                 \"permissionKey\": \"CREATE_ISSUES\"             }         }     ]
	 **/

	private List<CreateWorkflowTransitionRule> validators = null;

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * Get conditions
	 * @return conditions
	 **/
	public CreateWorkflowCondition getConditions() {
		return conditions;
	}

	/**
	 * Set conditions
	 **/
	public void setConditions(CreateWorkflowCondition conditions) {
		this.conditions = conditions;
	}

	public CreateWorkflowTransitionRulesDetails conditions(CreateWorkflowCondition conditions) {
		this.conditions = conditions;
		return this;
	}

	/**
	 * The workflow post functions.  **Note:** The default post functions are always added to the *initial* transition, as in:      \&quot;postFunctions\&quot;: [         {             \&quot;type\&quot;: \&quot;IssueCreateFunction\&quot;         },         {             \&quot;type\&quot;: \&quot;IssueReindexFunction\&quot;         },         {             \&quot;type\&quot;: \&quot;FireIssueEventFunction\&quot;,             \&quot;configuration\&quot;: {                 \&quot;event\&quot;: {                     \&quot;id\&quot;: \&quot;1\&quot;,                     \&quot;name\&quot;: \&quot;issue_created\&quot;                 }             }         }     ]  **Note:** The default post functions are always added to the *global* and *directed* transitions, as in:      \&quot;postFunctions\&quot;: [         {             \&quot;type\&quot;: \&quot;UpdateIssueStatusFunction\&quot;         },         {             \&quot;type\&quot;: \&quot;CreateCommentFunction\&quot;         },         {             \&quot;type\&quot;: \&quot;GenerateChangeHistoryFunction\&quot;         },         {             \&quot;type\&quot;: \&quot;IssueReindexFunction\&quot;         },         {             \&quot;type\&quot;: \&quot;FireIssueEventFunction\&quot;,             \&quot;configuration\&quot;: {                 \&quot;event\&quot;: {                     \&quot;id\&quot;: \&quot;13\&quot;,                     \&quot;name\&quot;: \&quot;issue_generic\&quot;                 }             }         }     ]
	 * @return postFunctions
	 **/
	public List<CreateWorkflowTransitionRule> getPostFunctions() {
		return postFunctions;
	}

	/**
	 * Set postFunctions
	 **/
	public void setPostFunctions(List<CreateWorkflowTransitionRule> postFunctions) {
		this.postFunctions = postFunctions;
	}

	public CreateWorkflowTransitionRulesDetails postFunctions(List<CreateWorkflowTransitionRule> postFunctions) {
		this.postFunctions = postFunctions;
		return this;
	}

	public CreateWorkflowTransitionRulesDetails addPostFunctionsItem(CreateWorkflowTransitionRule postFunctionsItem) {
		if (this.postFunctions == null) {
			this.postFunctions = new ArrayList<>();
		}
		this.postFunctions.add(postFunctionsItem);
		return this;
	}

	/**
	 * The workflow validators.  **Note:** The default permission validator is always added to the *initial* transition, as in:      \&quot;validators\&quot;: [         {             \&quot;type\&quot;: \&quot;PermissionValidator\&quot;,             \&quot;configuration\&quot;: {                 \&quot;permissionKey\&quot;: \&quot;CREATE_ISSUES\&quot;             }         }     ]
	 * @return validators
	 **/
	public List<CreateWorkflowTransitionRule> getValidators() {
		return validators;
	}

	/**
	 * Set validators
	 **/
	public void setValidators(List<CreateWorkflowTransitionRule> validators) {
		this.validators = validators;
	}

	public CreateWorkflowTransitionRulesDetails validators(List<CreateWorkflowTransitionRule> validators) {
		this.validators = validators;
		return this;
	}

	public CreateWorkflowTransitionRulesDetails addValidatorsItem(CreateWorkflowTransitionRule validatorsItem) {
		if (this.validators == null) {
			this.validators = new ArrayList<>();
		}
		this.validators.add(validatorsItem);
		return this;
	}

	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {

		String sb = "class CreateWorkflowTransitionRulesDetails {\n" +
			"    conditions: " + toIndentedString(conditions) + "\n" +
			"    postFunctions: " + toIndentedString(postFunctions) + "\n" +
			"    validators: " + toIndentedString(validators) + "\n" +
			"}";
		return sb;
	}
}
