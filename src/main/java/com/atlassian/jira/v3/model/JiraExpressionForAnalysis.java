/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Details of Jira expressions for analysis.
 **/

public class JiraExpressionForAnalysis {

	/**
	 * Context variables and their types. The type checker assumes that [common context variables](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#context-variables), such as `issue` or `project`, are available in context and sets their type. Use this property to override the default types or provide details of new variables.
	 **/

	private Map<String, String> contextVariables = null;

	/**
	 * The list of Jira expressions to analyse.
	 **/

	private List<String> expressions = new ArrayList<>();

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * Context variables and their types. The type checker assumes that [common context variables](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#context-variables), such as &#x60;issue&#x60; or &#x60;project&#x60;, are available in context and sets their type. Use this property to override the default types or provide details of new variables.
	 * @return contextVariables
	 **/
	public Map<String, String> getContextVariables() {
		return contextVariables;
	}

	/**
	 * Set contextVariables
	 **/
	public void setContextVariables(Map<String, String> contextVariables) {
		this.contextVariables = contextVariables;
	}

	public JiraExpressionForAnalysis contextVariables(Map<String, String> contextVariables) {
		this.contextVariables = contextVariables;
		return this;
	}

	public JiraExpressionForAnalysis putContextVariablesItem(String key, String contextVariablesItem) {
		if (this.contextVariables == null) {
			this.contextVariables = new HashMap<>();
		}
		this.contextVariables.put(key, contextVariablesItem);
		return this;
	}

	/**
	 * The list of Jira expressions to analyse.
	 * @return expressions
	 **/
	public List<String> getExpressions() {
		return expressions;
	}

	/**
	 * Set expressions
	 **/
	public void setExpressions(List<String> expressions) {
		this.expressions = expressions;
	}

	public JiraExpressionForAnalysis expressions(List<String> expressions) {
		this.expressions = expressions;
		return this;
	}

	public JiraExpressionForAnalysis addExpressionsItem(String expressionsItem) {
		if (this.expressions == null) {
			this.expressions = new ArrayList<>();
		}
		this.expressions.add(expressionsItem);
		return this;
	}

	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {

		String sb = "class JiraExpressionForAnalysis {\n" +
			"    contextVariables: " + toIndentedString(contextVariables) + "\n" +
			"    expressions: " + toIndentedString(expressions) + "\n" +
			"}";
		return sb;
	}
}
