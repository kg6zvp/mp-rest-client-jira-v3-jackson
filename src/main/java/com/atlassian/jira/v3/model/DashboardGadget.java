/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Details of a gadget.
 **/

public class DashboardGadget {

	/**
	 * The color of the gadget. Should be one of `blue`, `red`, `yellow`, `green`, `cyan`, `purple`, `gray`, or `white`.
	 **/

	private ColorEnum color;
	/**
	 * The ID of the gadget instance.
	 **/

	private Long id;
	/**
	 * The module key of the gadget type.
	 **/

	private String moduleKey;
	private DashboardGadgetPosition position;
	/**
	 * The title of the gadget.
	 **/

	private String title;
	/**
	 * The URI of the gadget type.
	 **/

	private String uri;

	public DashboardGadget() {
	}

	public DashboardGadget(
		ColorEnum color,
		Long id,
		String moduleKey,
		String title,
		String uri
	) {
		this.color = color;
		this.id = id;
		this.moduleKey = moduleKey;
		this.title = title;
		this.uri = uri;
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * The color of the gadget. Should be one of &#x60;blue&#x60;, &#x60;red&#x60;, &#x60;yellow&#x60;, &#x60;green&#x60;, &#x60;cyan&#x60;, &#x60;purple&#x60;, &#x60;gray&#x60;, or &#x60;white&#x60;.
	 * @return color
	 **/
	public ColorEnum getColor() {
		return color;
	}


	/**
	 * The ID of the gadget instance.
	 * @return id
	 **/
	public Long getId() {
		return id;
	}


	/**
	 * The module key of the gadget type.
	 * @return moduleKey
	 **/
	public String getModuleKey() {
		return moduleKey;
	}


	/**
	 * Get position
	 * @return position
	 **/
	public DashboardGadgetPosition getPosition() {
		return position;
	}

	/**
	 * Set position
	 **/
	public void setPosition(DashboardGadgetPosition position) {
		this.position = position;
	}

	public DashboardGadget position(DashboardGadgetPosition position) {
		this.position = position;
		return this;
	}

	/**
	 * The title of the gadget.
	 * @return title
	 **/
	public String getTitle() {
		return title;
	}


	/**
	 * The URI of the gadget type.
	 * @return uri
	 **/
	public String getUri() {
		return uri;
	}


	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {

		String sb = "class DashboardGadget {\n" +
			"    color: " + toIndentedString(color) + "\n" +
			"    id: " + toIndentedString(id) + "\n" +
			"    moduleKey: " + toIndentedString(moduleKey) + "\n" +
			"    position: " + toIndentedString(position) + "\n" +
			"    title: " + toIndentedString(title) + "\n" +
			"    uri: " + toIndentedString(uri) + "\n" +
			"}";
		return sb;
	}

	public enum ColorEnum {

		BLUE("blue"), RED("red"), YELLOW("yellow"), GREEN("green"), CYAN("cyan"), PURPLE("purple"), GRAY("gray"), WHITE("white");


		String value;

		ColorEnum(String v) {
			value = v;
		}

		@JsonValue
		public String value() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}
	}
}
