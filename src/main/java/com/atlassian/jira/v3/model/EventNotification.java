/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 * <p>
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 * <p>
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Details about a notification associated with an event.
 **/

public class EventNotification {

	/**
	 * The email address.
	 **/

	private String emailAddress;

	/**
	 * Expand options that include additional event notification details in the response.
	 **/

	private String expand;


	private FieldDetails field;


	private GroupName group;

	/**
	 * The ID of the notification.
	 **/

	private Long id;
	/**
	 * Identifies the recipients of the notification.
	 **/

	private NotificationTypeEnum notificationType;
	/**
	 * As a group's name can change, use of `recipient` is recommended. The identifier associated with the `notificationType` value that defines the receiver of the notification, where the receiver isn't implied by `notificationType` value. So, when `notificationType` is:   *  `User` The `parameter` is the user account ID.  *  `Group` The `parameter` is the group name.  *  `ProjectRole` The `parameter` is the project role ID.  *  `UserCustomField` The `parameter` is the ID of the custom field.  *  `GroupCustomField` The `parameter` is the ID of the custom field.
	 **/

	private String parameter;
	private ProjectRole projectRole;
	/**
	 * The identifier associated with the `notificationType` value that defines the receiver of the notification, where the receiver isn't implied by the `notificationType` value. So, when `notificationType` is:   *  `User`, `recipient` is the user account ID.  *  `Group`, `recipient` is the group ID.  *  `ProjectRole`, `recipient` is the project role ID.  *  `UserCustomField`, `recipient` is the ID of the custom field.  *  `GroupCustomField`, `recipient` is the ID of the custom field.
	 **/

	private String recipient;
	private UserDetails user;

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * The email address.
	 * @return emailAddress
	 **/
	public String getEmailAddress() {
		return emailAddress;
	}

	/**
	 * Set emailAddress
	 **/
	public void setEmailAddress(String emailAddress) {
		this.emailAddress = emailAddress;
	}

	public EventNotification emailAddress(String emailAddress) {
		this.emailAddress = emailAddress;
		return this;
	}

	/**
	 * Expand options that include additional event notification details in the response.
	 * @return expand
	 **/
	public String getExpand() {
		return expand;
	}

	/**
	 * Set expand
	 **/
	public void setExpand(String expand) {
		this.expand = expand;
	}

	public EventNotification expand(String expand) {
		this.expand = expand;
		return this;
	}

	/**
	 * Get field
	 * @return field
	 **/
	public FieldDetails getField() {
		return field;
	}

	/**
	 * Set field
	 **/
	public void setField(FieldDetails field) {
		this.field = field;
	}

	public EventNotification field(FieldDetails field) {
		this.field = field;
		return this;
	}

	/**
	 * Get group
	 * @return group
	 **/
	public GroupName getGroup() {
		return group;
	}

	/**
	 * Set group
	 **/
	public void setGroup(GroupName group) {
		this.group = group;
	}

	public EventNotification group(GroupName group) {
		this.group = group;
		return this;
	}

	/**
	 * The ID of the notification.
	 * @return id
	 **/
	public Long getId() {
		return id;
	}

	/**
	 * Set id
	 **/
	public void setId(Long id) {
		this.id = id;
	}

	public EventNotification id(Long id) {
		this.id = id;
		return this;
	}

	/**
	 * Identifies the recipients of the notification.
	 * @return notificationType
	 **/
	public NotificationTypeEnum getNotificationType() {
		return notificationType;
	}

	/**
	 * Set notificationType
	 **/
	public void setNotificationType(NotificationTypeEnum notificationType) {
		this.notificationType = notificationType;
	}

	public EventNotification notificationType(NotificationTypeEnum notificationType) {
		this.notificationType = notificationType;
		return this;
	}

	/**
	 * As a group&#39;s name can change, use of &#x60;recipient&#x60; is recommended. The identifier associated with the &#x60;notificationType&#x60; value that defines the receiver of the notification, where the receiver isn&#39;t implied by &#x60;notificationType&#x60; value. So, when &#x60;notificationType&#x60; is:   *  &#x60;User&#x60; The &#x60;parameter&#x60; is the user account ID.  *  &#x60;Group&#x60; The &#x60;parameter&#x60; is the group name.  *  &#x60;ProjectRole&#x60; The &#x60;parameter&#x60; is the project role ID.  *  &#x60;UserCustomField&#x60; The &#x60;parameter&#x60; is the ID of the custom field.  *  &#x60;GroupCustomField&#x60; The &#x60;parameter&#x60; is the ID of the custom field.
	 * @return parameter
	 **/
	public String getParameter() {
		return parameter;
	}

	/**
	 * Set parameter
	 **/
	public void setParameter(String parameter) {
		this.parameter = parameter;
	}

	public EventNotification parameter(String parameter) {
		this.parameter = parameter;
		return this;
	}

	/**
	 * Get projectRole
	 * @return projectRole
	 **/
	public ProjectRole getProjectRole() {
		return projectRole;
	}

	/**
	 * Set projectRole
	 **/
	public void setProjectRole(ProjectRole projectRole) {
		this.projectRole = projectRole;
	}

	public EventNotification projectRole(ProjectRole projectRole) {
		this.projectRole = projectRole;
		return this;
	}

	/**
	 * The identifier associated with the &#x60;notificationType&#x60; value that defines the receiver of the notification, where the receiver isn&#39;t implied by the &#x60;notificationType&#x60; value. So, when &#x60;notificationType&#x60; is:   *  &#x60;User&#x60;, &#x60;recipient&#x60; is the user account ID.  *  &#x60;Group&#x60;, &#x60;recipient&#x60; is the group ID.  *  &#x60;ProjectRole&#x60;, &#x60;recipient&#x60; is the project role ID.  *  &#x60;UserCustomField&#x60;, &#x60;recipient&#x60; is the ID of the custom field.  *  &#x60;GroupCustomField&#x60;, &#x60;recipient&#x60; is the ID of the custom field.
	 * @return recipient
	 **/
	public String getRecipient() {
		return recipient;
	}

	/**
	 * Set recipient
	 **/
	public void setRecipient(String recipient) {
		this.recipient = recipient;
	}

	public EventNotification recipient(String recipient) {
		this.recipient = recipient;
		return this;
	}

	/**
	 * Get user
	 * @return user
	 **/
	public UserDetails getUser() {
		return user;
	}

	/**
	 * Set user
	 **/
	public void setUser(UserDetails user) {
		this.user = user;
	}

	public EventNotification user(UserDetails user) {
		this.user = user;
		return this;
	}


	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {

		String sb = "class EventNotification {\n" +
			"    emailAddress: " + toIndentedString(emailAddress) + "\n" +
			"    expand: " + toIndentedString(expand) + "\n" +
			"    field: " + toIndentedString(field) + "\n" +
			"    group: " + toIndentedString(group) + "\n" +
			"    id: " + toIndentedString(id) + "\n" +
			"    notificationType: " + toIndentedString(notificationType) + "\n" +
			"    parameter: " + toIndentedString(parameter) + "\n" +
			"    projectRole: " + toIndentedString(projectRole) + "\n" +
			"    recipient: " + toIndentedString(recipient) + "\n" +
			"    user: " + toIndentedString(user) + "\n" +
			"}";
		return sb;
	}

	public enum NotificationTypeEnum {

		CURRENTASSIGNEE("CurrentAssignee"), REPORTER("Reporter"), CURRENTUSER("CurrentUser"), PROJECTLEAD("ProjectLead"), COMPONENTLEAD("ComponentLead"), USER("User"), GROUP("Group"), PROJECTROLE("ProjectRole"), EMAILADDRESS("EmailAddress"), ALLWATCHERS("AllWatchers"), USERCUSTOMFIELD("UserCustomField"), GROUPCUSTOMFIELD("GroupCustomField");


		String value;

		NotificationTypeEnum(String v) {
			value = v;
		}

		@JsonValue
		public String value() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}
	}
}
