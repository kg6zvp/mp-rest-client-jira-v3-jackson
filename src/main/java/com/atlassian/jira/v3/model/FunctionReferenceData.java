/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 * <p>
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 * <p>
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.List;

/**
 * Details of functions that can be used in advanced searches.
 **/

public class FunctionReferenceData {

	/**
	 * The display name of the function.
	 **/

	private String displayName;
	/**
	 * Whether the function can take a list of arguments.
	 **/

	private IsListEnum isList;
	/**
	 * Whether the function supports both single and list value operators.
	 **/

	private SupportsListAndSingleValueOperatorsEnum supportsListAndSingleValueOperators;
	/**
	 * The data types returned by the function.
	 **/

	private List<String> types = null;
	/**
	 * The function identifier.
	 **/

	private String value;

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * The display name of the function.
	 * @return displayName
	 **/
	public String getDisplayName() {
		return displayName;
	}

	/**
	 * Set displayName
	 **/
	public void setDisplayName(String displayName) {
		this.displayName = displayName;
	}

	public FunctionReferenceData displayName(String displayName) {
		this.displayName = displayName;
		return this;
	}

	/**
	 * Whether the function can take a list of arguments.
	 * @return isList
	 **/
	public IsListEnum getIsList() {
		return isList;
	}

	/**
	 * Set isList
	 **/
	public void setIsList(IsListEnum isList) {
		this.isList = isList;
	}

	public FunctionReferenceData isList(IsListEnum isList) {
		this.isList = isList;
		return this;
	}

	/**
	 * Whether the function supports both single and list value operators.
	 * @return supportsListAndSingleValueOperators
	 **/
	public SupportsListAndSingleValueOperatorsEnum getSupportsListAndSingleValueOperators() {
		return supportsListAndSingleValueOperators;
	}

	/**
	 * Set supportsListAndSingleValueOperators
	 **/
	public void setSupportsListAndSingleValueOperators(SupportsListAndSingleValueOperatorsEnum supportsListAndSingleValueOperators) {
		this.supportsListAndSingleValueOperators = supportsListAndSingleValueOperators;
	}

	public FunctionReferenceData supportsListAndSingleValueOperators(SupportsListAndSingleValueOperatorsEnum supportsListAndSingleValueOperators) {
		this.supportsListAndSingleValueOperators = supportsListAndSingleValueOperators;
		return this;
	}

	/**
	 * The data types returned by the function.
	 * @return types
	 **/
	public List<String> getTypes() {
		return types;
	}

	/**
	 * Set types
	 **/
	public void setTypes(List<String> types) {
		this.types = types;
	}

	public FunctionReferenceData types(List<String> types) {
		this.types = types;
		return this;
	}

	public FunctionReferenceData addTypesItem(String typesItem) {
		if (this.types == null) {
			this.types = new ArrayList<>();
		}
		this.types.add(typesItem);
		return this;
	}

	/**
	 * The function identifier.
	 * @return value
	 **/
	public String getValue() {
		return value;
	}

	/**
	 * Set value
	 **/
	public void setValue(String value) {
		this.value = value;
	}

	public FunctionReferenceData value(String value) {
		this.value = value;
		return this;
	}

	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {

		String sb = "class FunctionReferenceData {\n" +
			"    displayName: " + toIndentedString(displayName) + "\n" +
			"    isList: " + toIndentedString(isList) + "\n" +
			"    supportsListAndSingleValueOperators: " + toIndentedString(supportsListAndSingleValueOperators) + "\n" +
			"    types: " + toIndentedString(types) + "\n" +
			"    value: " + toIndentedString(value) + "\n" +
			"}";
		return sb;
	}


	public enum IsListEnum {

		TRUE("true"), FALSE("false");


		String value;

		IsListEnum(String v) {
			value = v;
		}

		@JsonValue
		public String value() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}
	}

	public enum SupportsListAndSingleValueOperatorsEnum {

		TRUE("true"), FALSE("false");


		String value;

		SupportsListAndSingleValueOperatorsEnum(String v) {
			value = v;
		}

		@JsonValue
		public String value() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}
	}
}
