/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import com.fasterxml.jackson.annotation.JsonValue;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.net.URI;
import java.util.Map;

/**
 * Details about a project component.
 **/
@Data
@Builder(toBuilder = true)
@NoArgsConstructor
@AllArgsConstructor
public class ProjectComponent {

	/**
	 * Compass component's ID. Can't be updated. Not required for creating a Project Component.
	 **/
	private String ari;

	private ProjectComponentAssignee assignee;
	/**
	 * The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:   *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.  *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.  *  `UNASSIGNED` an assignee is not set for issues created with this component.  *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.  Default value: `PROJECT_DEFAULT`.   Optional when creating or updating a component.
	 **/
	private AssigneeTypeEnum assigneeType;
	/**
	 * The description for the component. Optional when creating or updating a component.
	 **/
	private String description;
	/**
	 * The unique identifier for the component.
	 **/
	private String id;
	/**
	 * Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.
	 **/
	private Boolean isAssigneeTypeValid;
	private ProjectComponentLead lead;
	/**
	 * The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
	 **/
	private String leadAccountId;
	/**
	 * This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
	 **/
	private String leadUserName;
	/**
	 * Compass component's metadata. Can't be updated. Not required for creating a Project Component.
	 **/
	private Map<String, String> metadata = null;
	/**
	 * The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters.
	 **/
	private String name;
	/**
	 * The key of the project the component is assigned to. Required when creating a component. Can't be updated.
	 **/
	private String project;
	/**
	 * The ID of the project the component is assigned to.
	 **/
	private Long projectId;
	private ProjectComponentRealAssignee realAssignee;
	/**
	 * The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:   *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.  *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.  *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.  *  `PROJECT_DEFAULT` when none of the preceding cases are true.
	 **/
	private RealAssigneeTypeEnum realAssigneeType;
	/**
	 * The URL of the component.
	 **/
	private URI self;

	public enum AssigneeTypeEnum {
		PROJECT_DEFAULT("PROJECT_DEFAULT"), COMPONENT_LEAD("COMPONENT_LEAD"), PROJECT_LEAD("PROJECT_LEAD"), UNASSIGNED("UNASSIGNED");


		String value;

		AssigneeTypeEnum(String v) {
			value = v;
		}

		@JsonValue
		public String value() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}
	}

	public enum RealAssigneeTypeEnum {

		PROJECT_DEFAULT("PROJECT_DEFAULT"), COMPONENT_LEAD("COMPONENT_LEAD"), PROJECT_LEAD("PROJECT_LEAD"), UNASSIGNED("UNASSIGNED");


		String value;

		RealAssigneeTypeEnum(String v) {
			value = v;
		}

		@JsonValue
		public String value() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}
	}
}
