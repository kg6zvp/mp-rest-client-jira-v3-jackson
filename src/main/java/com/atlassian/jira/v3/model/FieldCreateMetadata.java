/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * The metadata describing an issue field for createmeta.
 **/
@NoArgsConstructor
@AllArgsConstructor
public class FieldCreateMetadata {

	/**
	 * The list of values allowed in the field.
	 **/

	private List<Object> allowedValues = null;

	/**
	 * The URL that can be used to automatically complete the field.
	 **/

	private String autoCompleteUrl;

	/**
	 * The configuration properties.
	 **/
	@JsonProperty("configuration")
	private Map<String, Object> _configuration = null;

	/**
	 * The default value of the field.
	 **/

	private Object defaultValue = null;

	/**
	 * The field id.
	 **/

	private String fieldId;

	/**
	 * Whether the field has a default value.
	 **/

	private Boolean hasDefaultValue;

	/**
	 * The key of the field.
	 **/

	private String key;

	/**
	 * The name of the field.
	 **/

	private String name;

	/**
	 * The list of operations that can be performed on the field.
	 **/

	private List<String> operations = new ArrayList<>();

	/**
	 * Whether the field is required.
	 **/

	private Boolean required;


	private FieldCreateMetadataSchema schema;

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private static String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * The list of values allowed in the field.
	 * @return allowedValues
	 **/
	public List<Object> getAllowedValues() {
		return allowedValues;
	}

	/**
	 * The URL that can be used to automatically complete the field.
	 * @return autoCompleteUrl
	 **/
	public String getAutoCompleteUrl() {
		return autoCompleteUrl;
	}

	/**
	 * The configuration properties.
	 * @return _configuration
	 **/
	public Map<String, Object> getConfiguration() {
		return _configuration;
	}

	/**
	 * The default value of the field.
	 * @return defaultValue
	 **/
	public Object getDefaultValue() {
		return defaultValue;
	}

	/**
	 * The field id.
	 * @return fieldId
	 **/
	public String getFieldId() {
		return fieldId;
	}

	/**
	 * Whether the field has a default value.
	 * @return hasDefaultValue
	 **/
	public Boolean getHasDefaultValue() {
		return hasDefaultValue;
	}

	/**
	 * The key of the field.
	 * @return key
	 **/
	public String getKey() {
		return key;
	}

	/**
	 * The name of the field.
	 * @return name
	 **/
	public String getName() {
		return name;
	}

	/**
	 * The list of operations that can be performed on the field.
	 * @return operations
	 **/
	public List<String> getOperations() {
		return operations;
	}

	/**
	 * Whether the field is required.
	 * @return required
	 **/
	public Boolean getRequired() {
		return required;
	}

	/**
	 * Get schema
	 * @return schema
	 **/
	public FieldCreateMetadataSchema getSchema() {
		return schema;
	}

	/**
	 * Set schema
	 **/
	public void setSchema(FieldCreateMetadataSchema schema) {
		this.schema = schema;
	}

	public FieldCreateMetadata schema(FieldCreateMetadataSchema schema) {
		this.schema = schema;
		return this;
	}

	/**
	 * Create a string representation of this pojo.
	 **/
	@Override
	public String toString() {

		String sb = "class FieldCreateMetadata {\n" +
			"    allowedValues: " + toIndentedString(allowedValues) + "\n" +
			"    autoCompleteUrl: " + toIndentedString(autoCompleteUrl) + "\n" +
			"    _configuration: " + toIndentedString(_configuration) + "\n" +
			"    defaultValue: " + toIndentedString(defaultValue) + "\n" +
			"    fieldId: " + toIndentedString(fieldId) + "\n" +
			"    hasDefaultValue: " + toIndentedString(hasDefaultValue) + "\n" +
			"    key: " + toIndentedString(key) + "\n" +
			"    name: " + toIndentedString(name) + "\n" +
			"    operations: " + toIndentedString(operations) + "\n" +
			"    required: " + toIndentedString(required) + "\n" +
			"    schema: " + toIndentedString(schema) + "\n" +
			"}";
		return sb;
	}
}
