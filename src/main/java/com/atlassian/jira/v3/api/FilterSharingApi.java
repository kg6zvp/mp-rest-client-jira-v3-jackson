/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 * <p>
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 * <p>
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.api;

import com.atlassian.jira.v3.model.DefaultShareScope;
import com.atlassian.jira.v3.model.SharePermission;
import com.atlassian.jira.v3.model.SharePermissionInputBean;
import org.eclipse.microprofile.rest.client.annotation.RegisterProvider;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;

import javax.ws.rs.*;
import java.util.List;

/**
 * The Jira Cloud platform REST API
 *
 * <p>Jira Cloud platform REST API documentation
 *
 */

@RegisterRestClient
@RegisterProvider(ApiExceptionMapper.class)
@Path("/rest/api/3/filter")
public interface FilterSharingApi {

	/**
	 * Add share permission
	 *
	 * Add a share permissions to a filter. If you add a global share permission (one for all logged-in users or the public) it will overwrite all share permissions for the filter.  Be aware that this operation uses different objects for updating share permissions compared to [Update filter](#api-rest-api-3-filter-id-put).  **[Permissions](#permissions) required:** *Share dashboards and filters* [global permission](https://confluence.atlassian.com/x/x4dKLg) and the user must own the filter.
	 *
	 */
	@POST
	@Path("/{id}/permission")
	@Consumes({"application/json"})
	@Produces({"application/json"})
	List<SharePermission> addSharePermission(@PathParam("id") Long id, SharePermissionInputBean sharePermissionInputBean) throws ApiException, ProcessingException;

	/**
	 * Delete share permission
	 * <p>
	 * Deletes a share permission from a filter.  **[Permissions](#permissions) required:** Permission to access Jira and the user must own the filter.
	 *
	 */
	@DELETE
	@Path("/{id}/permission/{permissionId}")
	void deleteSharePermission(@PathParam("id") Long id, @PathParam("permissionId") Long permissionId) throws ApiException, ProcessingException;

	/**
	 * Get default share scope
	 * <p>
	 * Returns the default sharing settings for new filters and dashboards for a user.  **[Permissions](#permissions) required:** Permission to access Jira.
	 *
	 */
	@GET
	@Path("/defaultShareScope")
	@Produces({"application/json"})
	DefaultShareScope getDefaultShareScope() throws ApiException, ProcessingException;

	/**
	 * Get share permission
	 *
	 * Returns a share permission for a filter. A filter can be shared with groups, projects, all logged-in users, or the public. Sharing with all logged-in users or the public is known as a global share permission.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** None, however, a share permission is only returned for:   *  filters owned by the user.  *  filters shared with a group that the user is a member of.  *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.  *  filters shared with a public project.  *  filters shared with the public.
	 *
	 */
	@GET
	@Path("/{id}/permission/{permissionId}")
	@Produces({"application/json"})
	SharePermission getSharePermission(@PathParam("id") Long id, @PathParam("permissionId") Long permissionId) throws ApiException, ProcessingException;

	/**
	 * Get share permissions
	 *
	 * Returns the share permissions for a filter. A filter can be shared with groups, projects, all logged-in users, or the public. Sharing with all logged-in users or the public is known as a global share permission.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** None, however, share permissions are only returned for:   *  filters owned by the user.  *  filters shared with a group that the user is a member of.  *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.  *  filters shared with a public project.  *  filters shared with the public.
	 *
	 */
	@GET
	@Path("/{id}/permission")
	@Produces({"application/json"})
	List<SharePermission> getSharePermissions(@PathParam("id") Long id) throws ApiException, ProcessingException;

	/**
	 * Set default share scope
	 * <p>
	 * Sets the default sharing for new filters and dashboards for a user.  **[Permissions](#permissions) required:** Permission to access Jira.
	 *
	 */
	@PUT
	@Path("/defaultShareScope")
	@Consumes({"application/json"})
	@Produces({"application/json"})
	DefaultShareScope setDefaultShareScope(DefaultShareScope defaultShareScope) throws ApiException, ProcessingException;
}
