/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 * <p>
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 * <p>
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.api;

import com.atlassian.jira.v3.model.EntityProperty;
import com.atlassian.jira.v3.model.PropertyKeys;
import org.eclipse.microprofile.rest.client.annotation.RegisterProvider;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;

import javax.ws.rs.*;

/**
 * The Jira Cloud platform REST API
 *
 * <p>Jira Cloud platform REST API documentation
 *
 */

@RegisterRestClient
@RegisterProvider(ApiExceptionMapper.class)
@Path("/rest/api/3/user/properties")
public interface UserPropertiesApi {

	/**
	 * Delete user property
	 *
	 * Deletes a property from a user.  Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.  **[Permissions](#permissions) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to delete a property from any user.  *  Access to Jira, to delete a property from the calling user&#39;s record.
	 *
	 */
	@DELETE
	@Path("/{propertyKey}")
	void deleteUserProperty(@PathParam("propertyKey") String propertyKey, @QueryParam("accountId") String accountId, @QueryParam("userKey") String userKey, @QueryParam("username") String username) throws ApiException, ProcessingException;

	/**
	 * Get user property
	 *
	 * Returns the value of a user&#39;s property. If no property key is provided [Get user property keys](#api-rest-api-3-user-properties-get) is called.  Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.  **[Permissions](#permissions) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to get a property from any user.  *  Access to Jira, to get a property from the calling user&#39;s record.
	 *
	 */
	@GET
	@Path("/{propertyKey}")
	@Produces({"application/json"})
	EntityProperty getUserProperty(@PathParam("propertyKey") String propertyKey, @QueryParam("accountId") String accountId, @QueryParam("userKey") String userKey, @QueryParam("username") String username) throws ApiException, ProcessingException;

	/**
	 * Get user property keys
	 *
	 * Returns the keys of all properties for a user.  Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.  **[Permissions](#permissions) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to access the property keys on any user.  *  Access to Jira, to access the calling user&#39;s property keys.
	 *
	 */
	@GET

	@Produces({"application/json"})
	PropertyKeys getUserPropertyKeys(@QueryParam("accountId") String accountId, @QueryParam("userKey") String userKey, @QueryParam("username") String username) throws ApiException, ProcessingException;

	/**
	 * Set user property
	 *
	 * Sets the value of a user&#39;s property. Use this resource to store custom data against a user.  Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.  **[Permissions](#permissions) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to set a property on any user.  *  Access to Jira, to set a property on the calling user&#39;s record.
	 *
	 */
	@PUT
	@Path("/{propertyKey}")
	@Consumes({"application/json"})
	@Produces({"application/json"})
	Object setUserProperty(@PathParam("propertyKey") String propertyKey, Object body, @QueryParam("accountId") String accountId, @QueryParam("userKey") String userKey, @QueryParam("username") String username) throws ApiException, ProcessingException;
}
