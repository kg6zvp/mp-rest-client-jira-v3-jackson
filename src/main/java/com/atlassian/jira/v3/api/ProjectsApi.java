/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.api;

import com.atlassian.jira.v3.model.*;
import org.eclipse.microprofile.rest.client.annotation.RegisterProvider;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;

import javax.ws.rs.*;
import java.util.List;
import java.util.Set;

/**
 * The Jira Cloud platform REST API
 *
 * <p>Jira Cloud platform REST API documentation
 *
 */

@RegisterRestClient
@RegisterProvider(ApiExceptionMapper.class)
@Path("/rest/api/3/project")
public interface ProjectsApi {

	/**
	 * Archive project
	 *
	 * Archives a project. You can&#39;t delete a project if it&#39;s archived. To delete an archived project, restore the project and then delete it. To restore a project, use the Jira UI.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
	 *
	 */
	@POST
	@Path("/{projectIdOrKey}/archive")
	@Produces({"application/json"})
	Object archiveProject(@PathParam("projectIdOrKey") String projectIdOrKey) throws ApiException, ProcessingException;

	/**
	 * Create project
	 *
	 * Creates a project based on a project type template, as shown in the following table:  | Project Type Key | Project Template Key |   |--|--|   | &#x60;business&#x60; | &#x60;com.atlassian.jira-core-project-templates:jira-core-simplified-content-management&#x60;, &#x60;com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval&#x60;, &#x60;com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking&#x60;, &#x60;com.atlassian.jira-core-project-templates:jira-core-simplified-process-control&#x60;, &#x60;com.atlassian.jira-core-project-templates:jira-core-simplified-procurement&#x60;, &#x60;com.atlassian.jira-core-project-templates:jira-core-simplified-project-management&#x60;, &#x60;com.atlassian.jira-core-project-templates:jira-core-simplified-recruitment&#x60;, &#x60;com.atlassian.jira-core-project-templates:jira-core-simplified-task-tracking&#x60; |   | &#x60;service_desk&#x60; | &#x60;com.atlassian.servicedesk:simplified-it-service-management&#x60;, &#x60;com.atlassian.servicedesk:simplified-general-service-desk-it&#x60;, &#x60;com.atlassian.servicedesk:simplified-general-service-desk-business&#x60;, &#x60;com.atlassian.servicedesk:simplified-external-service-desk&#x60;, &#x60;com.atlassian.servicedesk:simplified-hr-service-desk&#x60;, &#x60;com.atlassian.servicedesk:simplified-facilities-service-desk&#x60;, &#x60;com.atlassian.servicedesk:simplified-legal-service-desk&#x60;, &#x60;com.atlassian.servicedesk:simplified-analytics-service-desk&#x60;, &#x60;com.atlassian.servicedesk:simplified-marketing-service-desk&#x60;, &#x60;com.atlassian.servicedesk:simplified-design-service-desk&#x60;, &#x60;com.atlassian.servicedesk:simplified-sales-service-desk&#x60;, &#x60;com.atlassian.servicedesk:simplified-blank-project-business&#x60;, &#x60;com.atlassian.servicedesk:simplified-blank-project-it&#x60;, &#x60;com.atlassian.servicedesk:simplified-finance-service-desk&#x60;, &#x60;com.atlassian.servicedesk:next-gen-it-service-desk&#x60;, &#x60;com.atlassian.servicedesk:next-gen-hr-service-desk&#x60;, &#x60;com.atlassian.servicedesk:next-gen-legal-service-desk&#x60;, &#x60;com.atlassian.servicedesk:next-gen-marketing-service-desk&#x60;, &#x60;com.atlassian.servicedesk:next-gen-facilities-service-desk&#x60;, &#x60;com.atlassian.servicedesk:next-gen-general-it-service-desk&#x60;, &#x60;com.atlassian.servicedesk:next-gen-general-business-service-desk&#x60;, &#x60;com.atlassian.servicedesk:next-gen-analytics-service-desk&#x60;, &#x60;com.atlassian.servicedesk:next-gen-finance-service-desk&#x60;, &#x60;com.atlassian.servicedesk:next-gen-design-service-desk&#x60;, &#x60;com.atlassian.servicedesk:next-gen-sales-service-desk&#x60; |   | &#x60;software&#x60; | &#x60;com.pyxis.greenhopper.jira:gh-simplified-agility-kanban&#x60;, &#x60;com.pyxis.greenhopper.jira:gh-simplified-agility-scrum&#x60;, &#x60;com.pyxis.greenhopper.jira:gh-simplified-basic&#x60;, &#x60;com.pyxis.greenhopper.jira:gh-simplified-kanban-classic&#x60;, &#x60;com.pyxis.greenhopper.jira:gh-simplified-scrum-classic&#x60; |   The project types are available according to the installed Jira features as follows:   *  Jira Core, the default, enables &#x60;business&#x60; projects.  *  Jira Service Management enables &#x60;service_desk&#x60; projects.  *  Jira Software enables &#x60;software&#x60; projects.  To determine which features are installed, go to **Jira settings** &gt; **Apps** &gt; **Manage apps** and review the System Apps list. To add Jira Software or Jira Service Management into a JIRA instance, use **Jira settings** &gt; **Apps** &gt; **Finding new apps**. For more information, see [ Managing add-ons](https://confluence.atlassian.com/x/S31NLg).  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
	 *
	 */
	@POST

	@Consumes({"application/json"})
	@Produces({"application/json"})
	ProjectIdentifiers createProject(CreateProjectDetails createProjectDetails) throws ApiException, ProcessingException;

	/**
	 * Delete project
	 *
	 * Deletes a project.  You can&#39;t delete a project if it&#39;s archived. To delete an archived project, restore the project and then delete it. To restore a project, use the Jira UI.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
	 *
	 */
	@DELETE
	@Path("/{projectIdOrKey}")
	void deleteProject(@PathParam("projectIdOrKey") String projectIdOrKey, @QueryParam("enableUndo") @DefaultValue("true") Boolean enableUndo) throws ApiException, ProcessingException;

	/**
	 * Delete project asynchronously
	 *
	 * Deletes a project asynchronously.  This operation is:   *  transactional, that is, if part of the delete fails the project is not deleted.  *  [asynchronous](#async). Follow the &#x60;location&#x60; link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
	 *
	 */
	@POST
	@Path("/{projectIdOrKey}/delete")
	@Produces({"application/json"})
	void deleteProjectAsynchronously(@PathParam("projectIdOrKey") String projectIdOrKey) throws ApiException, ProcessingException;

	/**
	 * Get all projects
	 *
	 * Returns all projects visible to the user. Deprecated, use [ Get projects paginated](#api-rest-api-3-project-search-get) that supports search and pagination.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** Projects are returned only where the user has *Browse Projects* or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
	 *
	 * @deprecated
	 */
	@Deprecated
	@GET

	@Produces({"application/json"})
	List<Project> getAllProjects(@QueryParam("expand") String expand, @QueryParam("recent") Integer recent, @QueryParam("properties") List<String> properties) throws ApiException, ProcessingException;

	/**
	 * Get all statuses for project
	 *
	 * Returns the valid statuses for a project. The statuses are grouped by issue type, as each project has a set of valid issue types and each issue type has a set of valid statuses.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
	 *
	 */
	@GET
	@Path("/{projectIdOrKey}/statuses")
	@Produces({"application/json"})
	List<IssueTypeWithStatus> getAllStatuses(@PathParam("projectIdOrKey") String projectIdOrKey) throws ApiException, ProcessingException;

	/**
	 * Get project issue type hierarchy
	 *
	 * Get the issue type hierarchy for a next-gen project.  The issue type hierarchy for a project consists of:   *  *Epic* at level 1 (optional).  *  One or more issue types at level 0 such as *Story*, *Task*, or *Bug*. Where the issue type *Epic* is defined, these issue types are used to break down the content of an epic.  *  *Subtask* at level -1 (optional). This issue type enables level 0 issue types to be broken down into components. Issues based on a level -1 issue type must have a parent issue.  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
	 *
	 */
	@GET
	@Path("/{projectId}/hierarchy")
	@Produces({"application/json"})
	ProjectIssueTypeHierarchy getHierarchy(@PathParam("projectId") Long projectId) throws ApiException, ProcessingException;

	/**
	 * Get project notification scheme
	 *
	 * Gets a [notification scheme](https://confluence.atlassian.com/x/8YdKLg) associated with the project.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
	 *
	 */
	@GET
	@Path("/{projectKeyOrId}/notificationscheme")
	@Produces({"application/json"})
	NotificationScheme getNotificationSchemeForProject(@PathParam("projectKeyOrId") String projectKeyOrId, @QueryParam("expand") String expand) throws ApiException, ProcessingException;

	/**
	 * Get project
	 *
	 * Returns the [project details](https://confluence.atlassian.com/x/ahLpNw) for a project.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
	 *
	 */
	@GET
	@Path("/{projectIdOrKey}")
	@Produces({"application/json"})
	Project getProject(@PathParam("projectIdOrKey") String projectIdOrKey, @QueryParam("expand") String expand, @QueryParam("properties") List<String> properties) throws ApiException, ProcessingException;

	/**
	 * Get recent projects
	 *
	 * Returns a list of up to 20 projects recently viewed by the user that are still visible to the user.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** Projects are returned only where the user has one of:   *  *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.  *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.  *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
	 *
	 */
	@GET
	@Path("/recent")
	@Produces({"application/json"})
	List<Project> getRecent(@QueryParam("expand") String expand, @QueryParam("properties") List<Object> properties) throws ApiException, ProcessingException;

	/**
	 * Restore deleted or archived project
	 *
	 * Restores a project that has been archived or placed in the Jira recycle bin.  **[Permissions](#permissions) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)for Company managed projects.  *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project for Team managed projects.
	 *
	 */
	@POST
	@Path("/{projectIdOrKey}/restore")
	@Produces({"application/json"})
	Project restore(@PathParam("projectIdOrKey") String projectIdOrKey) throws ApiException, ProcessingException;

	/**
	 * Get projects paginated
	 *
	 * Returns a [paginated](#pagination) list of projects visible to the user.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** Projects are returned only where the user has one of:   *  *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.  *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.  *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
	 *
	 */
	@GET
	@Path("/search")
	@Produces({"application/json"})
	PageBeanProject searchProjects(@QueryParam("startAt") @DefaultValue("0") Long startAt, @QueryParam("maxResults") @DefaultValue("50") Integer maxResults, @QueryParam("orderBy") @DefaultValue("key") String orderBy, @QueryParam("id") Set<Long> id, @QueryParam("keys") Set<String> keys, @QueryParam("query") String query, @QueryParam("typeKey") String typeKey, @QueryParam("categoryId") Long categoryId, @QueryParam("action") @DefaultValue("view") String action, @QueryParam("expand") String expand, @QueryParam("status") List<String> status, @QueryParam("properties") List<Object> properties, @QueryParam("propertyQuery") String propertyQuery) throws ApiException, ProcessingException;

	/**
	 * Update project
	 *
	 * Updates the [project details](https://confluence.atlassian.com/x/ahLpNw) of a project.  All parameters are optional in the body of the request. Schemes will only be updated if they are included in the request, any omitted schemes will be left unchanged.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). is only needed when changing the schemes or project key. Otherwise you will only need *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg)
	 *
	 */
	@PUT
	@Path("/{projectIdOrKey}")
	@Consumes({"application/json"})
	@Produces({"application/json"})
	Project updateProject(@PathParam("projectIdOrKey") String projectIdOrKey, UpdateProjectDetails updateProjectDetails, @QueryParam("expand") String expand) throws ApiException, ProcessingException;
}
