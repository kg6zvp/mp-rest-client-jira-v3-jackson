/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.api;

import com.atlassian.jira.v3.model.JqlFunctionPrecomputationUpdateRequestBean;
import com.atlassian.jira.v3.model.PageBeanJqlFunctionPrecomputationBean;
import org.eclipse.microprofile.rest.client.annotation.RegisterProvider;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;

import javax.ws.rs.*;
import java.util.List;

/**
 * The Jira Cloud platform REST API
 *
 * <p>Jira Cloud platform REST API documentation
 *
 */

@RegisterRestClient
@RegisterProvider(ApiExceptionMapper.class)
@Path("/rest/api/3/jql/function/computation")
public interface JqlFunctionsAppsApi {

	/**
	 * Get precomputations (apps)
	 *
	 * Returns the list of a function&#39;s precomputations along with information about when they were created, updated, and last used. Each precomputation has a &#x60;value&#x60; \\- the JQL fragment to replace the custom function clause with.  **[Permissions](#permissions) required:** This API is only accessible to apps and apps can only inspect their own functions.
	 *
	 */
	@GET

	@Produces({"application/json"})
	PageBeanJqlFunctionPrecomputationBean getPrecomputations(@QueryParam("functionKey") List<String> functionKey, @QueryParam("startAt") @DefaultValue("0") Long startAt, @QueryParam("maxResults") @DefaultValue("100") Integer maxResults, @QueryParam("orderBy") String orderBy) throws ApiException, ProcessingException;

	/**
	 * Update precomputations (apps)
	 *
	 * Update the precomputation value of a function created by a Forge/Connect app.  **[Permissions](#permissions) required:** An API for apps to update their own precomputations.
	 *
	 */
	@POST

	@Consumes({"application/json"})
	@Produces({"application/json"})
	Object updatePrecomputations(JqlFunctionPrecomputationUpdateRequestBean jqlFunctionPrecomputationUpdateRequestBean) throws ApiException, ProcessingException;
}
