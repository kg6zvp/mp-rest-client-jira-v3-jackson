/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.api;

import com.atlassian.jira.v3.model.ScreenableTab;
import org.eclipse.microprofile.rest.client.annotation.RegisterProvider;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;

import javax.ws.rs.*;
import java.util.List;
import java.util.Set;

/**
 * The Jira Cloud platform REST API
 *
 * <p>Jira Cloud platform REST API documentation
 *
 */

@RegisterRestClient
@RegisterProvider(ApiExceptionMapper.class)
@Path("/rest/api/3/screens")
public interface ScreenTabsApi {

	/**
	 * Create screen tab
	 *
	 * Creates a tab for a screen.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
	 *
	 */
	@POST
	@Path("/{screenId}/tabs")
	@Consumes({"application/json"})
	@Produces({"application/json"})
	ScreenableTab addScreenTab(@PathParam("screenId") Long screenId, ScreenableTab screenableTab) throws ApiException, ProcessingException;

	/**
	 * Delete screen tab
	 *
	 * Deletes a screen tab.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
	 *
	 */
	@DELETE
	@Path("/{screenId}/tabs/{tabId}")
	void deleteScreenTab(@PathParam("screenId") Long screenId, @PathParam("tabId") Long tabId) throws ApiException, ProcessingException;

	/**
	 * Get all screen tabs
	 *
	 * Returns the list of tabs for a screen.  **[Permissions](#permissions) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).  *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) when the project key is specified, providing that the screen is associated with the project through a Screen Scheme and Issue Type Screen Scheme.
	 *
	 */
	@GET
	@Path("/{screenId}/tabs")
	@Produces({"application/json"})
	List<ScreenableTab> getAllScreenTabs(@PathParam("screenId") Long screenId, @QueryParam("projectKey") String projectKey) throws ApiException, ProcessingException;

	/**
	 * Get bulk screen tabs
	 *
	 * Returns the list of tabs for a bulk of screens.  **[Permissions](#permissions) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
	 *
	 */
	@GET
	@Path("/tabs")
	@Produces({"application/json"})
	void getBulkScreenTabs(@QueryParam("screenId") Set<Long> screenId, @QueryParam("tabId") Set<Long> tabId, @QueryParam("startAt") @DefaultValue("0") Long startAt, @QueryParam("maxResult") @DefaultValue("100") Integer maxResult) throws ApiException, ProcessingException;

	/**
	 * Move screen tab
	 *
	 * Moves a screen tab.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
	 *
	 */
	@POST
	@Path("/{screenId}/tabs/{tabId}/move/{pos}")
	@Produces({"application/json"})
	Object moveScreenTab(@PathParam("screenId") Long screenId, @PathParam("tabId") Long tabId, @PathParam("pos") Integer pos) throws ApiException, ProcessingException;

	/**
	 * Update screen tab
	 *
	 * Updates the name of a screen tab.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
	 *
	 */
	@PUT
	@Path("/{screenId}/tabs/{tabId}")
	@Consumes({"application/json"})
	@Produces({"application/json"})
	ScreenableTab renameScreenTab(@PathParam("screenId") Long screenId, @PathParam("tabId") Long tabId, ScreenableTab screenableTab) throws ApiException, ProcessingException;
}
