/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-8b1a1ff5508af1eb786f141e37a6e5e53cbc3737
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.atlassian.jira.v3.api;

import com.atlassian.jira.v3.model.EntityProperty;
import com.atlassian.jira.v3.model.PropertyKeys;
import org.eclipse.microprofile.rest.client.annotation.RegisterProvider;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;

import javax.ws.rs.*;

/**
 * The Jira Cloud platform REST API
 *
 * <p>Jira Cloud platform REST API documentation
 *
 */

@RegisterRestClient
@RegisterProvider(ApiExceptionMapper.class)
@Path("/rest/api/3/project/{projectIdOrKey}/properties")
public interface ProjectPropertiesApi {

	/**
	 * Delete project property
	 *
	 * Deletes the [property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties) from a project.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the property.
	 *
	 */
	@DELETE
	@Path("/{propertyKey}")
	void deleteProjectProperty(@PathParam("projectIdOrKey") String projectIdOrKey, @PathParam("propertyKey") String propertyKey) throws ApiException, ProcessingException;

	/**
	 * Get project property
	 *
	 * Returns the value of a [project property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties).  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the property.
	 *
	 */
	@GET
	@Path("/{propertyKey}")
	@Produces({"application/json"})
	EntityProperty getProjectProperty(@PathParam("projectIdOrKey") String projectIdOrKey, @PathParam("propertyKey") String propertyKey) throws ApiException, ProcessingException;

	/**
	 * Get project property keys
	 *
	 * Returns all [project property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties) keys for the project.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
	 *
	 */
	@GET

	@Produces({"application/json"})
	PropertyKeys getProjectPropertyKeys(@PathParam("projectIdOrKey") String projectIdOrKey) throws ApiException, ProcessingException;

	/**
	 * Set project property
	 *
	 * Sets the value of the [project property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties). You can use project properties to store custom data against the project.  The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.  This operation can be accessed anonymously.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project in which the property is created.
	 *
	 */
	@PUT
	@Path("/{propertyKey}")
	@Consumes({"application/json"})
	@Produces({"application/json"})
	Object setProjectProperty(@PathParam("projectIdOrKey") String projectIdOrKey, @PathParam("propertyKey") String propertyKey, Object body) throws ApiException, ProcessingException;
}
